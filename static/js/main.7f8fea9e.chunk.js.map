{"version":3,"sources":["components/FormUserDetails.js","components/FormPersonalDetails.js","components/Confirm.js","components/Success.js","components/UserForm.js","App.js","serviceWorker.js","index.js"],"names":["FormUserDetails","state","continue","e","preventDefault","_this","props","nextStep","_this$props","this","values","handleChange","react_default","a","createElement","MuiThemeProvider_default","Fragment","AppBar_default","title","TextField_default","hintText","onChange","floatingLabelText","defaultValue","firstName","lastName","email","RaisedButton_default","label","primary","style","styles","button","onClick","Component","margin","FormPersonalDetails","back","prevStep","occupation","city","bio","_this$props$values","List","primaryText","secondaryText","Success","UserForm","step","setState","input","Object","defineProperty","target","value","_this$state","components_FormUserDetails","components_FormPersonalDetails","Confirm","components_Success","App","className","components_UserForm","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7f8fea9e.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider'\r\nimport AppBar from 'material-ui/AppBar'\r\nimport TextField from 'material-ui/TextField'\r\nimport RaisedButton from 'material-ui/RaisedButton'\r\n\r\nclass FormUserDetails extends Component {\r\n  state = {\r\n      }\r\n\r\n  continue = e => {\r\n    e.preventDefault()\r\n    this.props.nextStep()\r\n  }\r\n\r\n  render() {\r\n    const {values, handleChange} = this.props\r\n    return (\r\n      <MuiThemeProvider>\r\n        <React.Fragment>\r\n          <AppBar title='Enter User Details'/>\r\n          <TextField hintText=\"Enter Your First Name\" onChange={handleChange('firstName')} floatingLabelText=\"First Name\" defaultValue={values.firstName}/>\r\n          <br />\r\n          <TextField hintText=\"Enter Your Last Name\" onChange={handleChange('lastName')} floatingLabelText=\"Last Name\" defaultValue={values.lastName}/>\r\n          <br />\r\n          <TextField hintText=\"Enter Your Email\" onChange={handleChange('email')} floatingLabelText=\"Email\" defaultValue={values.email}/>\r\n          <br />\r\n          \r\n          <RaisedButton\r\n            label=\"Continue\"\r\n            primary={true}\r\n            style={styles.button}\r\n            onClick={this.continue}\r\n          />\r\n        </React.Fragment>\r\n      </MuiThemeProvider>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  button: {\r\n    margin: '15px'\r\n  }\r\n}\r\n\r\nexport default FormUserDetails;\r\n","import React, {Component} from 'react'\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider'\r\nimport AppBar from 'material-ui/AppBar'\r\nimport TextField from 'material-ui/TextField'\r\nimport RaisedButton from 'material-ui/RaisedButton'\r\n\r\nclass FormPersonalDetails extends Component {\r\n  state = {\r\n      }\r\n\r\n  continue = e => {\r\n    e.preventDefault()\r\n    this.props.nextStep()\r\n  }\r\n  back = e => {\r\n    e.preventDefault()\r\n    this.props.prevStep()\r\n  }\r\n\r\n\r\n  render() {\r\n    const {values, handleChange} = this.props\r\n    return (\r\n      <MuiThemeProvider>\r\n        <React.Fragment>\r\n          <AppBar title='Enter Personal Details'/>\r\n          <TextField hintText=\"Enter Your Occupation\" onChange={handleChange('occupation')} floatingLabelText=\"Occupation\" defaultValue={values.occupation}/>\r\n          <br />\r\n          <TextField hintText=\"Enter Your City\" onChange={handleChange('city')} floatingLabelText=\"City\" defaultValue={values.city}/>\r\n          <br />\r\n          <TextField hintText=\"Enter Your Bio\" onChange={handleChange('bio')} floatingLabelText=\"Bio\" defaultValue={values.bio}/>\r\n          <br />\r\n          \r\n          <RaisedButton\r\n            label=\"Continue\"\r\n            primary={true}\r\n            style={styles.button}\r\n            onClick={this.continue}\r\n          />\r\n          <RaisedButton\r\n            label=\"Back\"\r\n            primary={false}\r\n            style={styles.button}\r\n            onClick={this.back}\r\n          />\r\n        </React.Fragment>\r\n      </MuiThemeProvider>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  button: {\r\n    margin: '15px'\r\n  }\r\n}\r\n\r\nexport default FormPersonalDetails;\r\n","import React, {Component} from 'react'\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider'\r\nimport AppBar from 'material-ui/AppBar'\r\nimport {List, ListItem} from 'material-ui/List'\r\nimport RaisedButton from 'material-ui/RaisedButton'\r\n\r\nclass FormPersonalDetails extends Component {\r\n  state = {\r\n      }\r\n\r\n  continue = e => {\r\n    e.preventDefault()\r\n    this.props.nextStep()\r\n  }\r\n  back = e => {\r\n    e.preventDefault()\r\n    this.props.prevStep()\r\n  }\r\n\r\n\r\n  render() {\r\n    const {values: {firstName, lastName, email, occupation, city, bio} } = this.props\r\n    return (\r\n      <MuiThemeProvider>\r\n        <React.Fragment>\r\n           <AppBar title='Confirm User Data'/>\r\n            <List>\r\n              <ListItem\r\n                primaryText=\"First Name\"\r\n                secondaryText={firstName}\r\n              />\r\n              <ListItem\r\n                primaryText=\"Last Name\"\r\n                secondaryText={lastName}\r\n              />\r\n              <ListItem\r\n                primaryText=\"Email\"\r\n                secondaryText={email}\r\n              />\r\n              <ListItem\r\n                primaryText=\"Occupation\"\r\n                secondaryText={occupation}\r\n              />\r\n              <ListItem\r\n                primaryText=\"City\"\r\n                secondaryText={city}\r\n              />\r\n              <ListItem\r\n                primaryText=\"Bio\"\r\n                secondaryText={bio}\r\n              />\r\n              \r\n            </List>\r\n          \r\n          <RaisedButton\r\n            label=\"Confirm & Continue\"\r\n            primary={true}\r\n            style={styles.button}\r\n            onClick={this.continue}\r\n          />\r\n          <RaisedButton\r\n            label=\"Back\"\r\n            primary={false}\r\n            style={styles.button}\r\n            onClick={this.back}\r\n          />\r\n        </React.Fragment>\r\n      </MuiThemeProvider>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  button: {\r\n    margin: '15px'\r\n  }\r\n}\r\n\r\nexport default FormPersonalDetails;\r\n","import React from 'react'\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider'\r\nimport AppBar from 'material-ui/AppBar'\r\n\r\nfunction Success() {\r\n  return (\r\n    <MuiThemeProvider>\r\n      <React.Fragment>\r\n         <AppBar title='Success'/>\r\n          <h1>Thank You.</h1>\r\n      </React.Fragment>\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n\r\nexport default Success;\r\n\r\n\r\n\r\n","import React, {Component} from 'react'\r\n\r\nimport FormUserDetails from './FormUserDetails'\r\nimport FormPersonalDetails from './FormPersonalDetails'\r\nimport Confirm from './Confirm'\r\nimport Success from './Success'\r\n\r\n\r\nclass UserForm extends Component {\r\n  state = {\r\n    step: 1,\r\n    firstName: 'Sandip',\r\n    lastName: '',\r\n    email: 'sandipsaha597@gmail.com',\r\n    occupation: 'Web Developer',\r\n    city: '',\r\n    bio: ''\r\n  }\r\n\r\n  // Next step\r\n  nextStep = () => {\r\n    const {step} = this.state\r\n    this.setState({\r\n      step: step + 1\r\n    })\r\n  }\r\n\r\n  // Prev step\r\n  prevStep = () => {\r\n    const {step} = this.state\r\n    this.setState({\r\n      step: step - 1\r\n    })\r\n  }\r\n\r\n  // Handle fields change\r\n  handleChange = input => e => {\r\n    this.setState({[input]: e.target.value})\r\n  }\r\n\r\n  render() {\r\n    const {step} = this.state,\r\n      {firstName, lastName, email, occupation, city, bio} = this.state,\r\n      values = {firstName, lastName, email, occupation, city, bio}\r\n    \r\n    switch(step) {\r\n      case 1:\r\n        return (\r\n          <FormUserDetails\r\n            nextStep={this.nextStep}\r\n            handleChange={this.handleChange}\r\n            values={values}\r\n          />\r\n        )\r\n      case 2:\r\n        return (\r\n          <FormPersonalDetails\r\n            nextStep={this.nextStep}\r\n            prevStep={this.prevStep}\r\n            handleChange={this.handleChange}\r\n            values={values}\r\n          />\r\n        )\r\n      case 3:\r\n        return (\r\n          <Confirm\r\n            nextStep={this.nextStep}\r\n            prevStep={this.prevStep}\r\n            values={values}\r\n\r\n          />\r\n        )\r\n      case 4:\r\n        return <Success />\r\n    }\r\n  }\r\n}\r\n\r\nexport default UserForm;\r\n","import React, {Component} from 'react'\n\nimport UserForm from './components/UserForm'\nimport './App.css'\n\n\nclass App extends Component {\n  state = {\n      }\n\n  render() {\n    return (  \n      <div className=\"App\">\n        <UserForm />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}